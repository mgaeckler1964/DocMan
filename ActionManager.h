/*
		Project:
		Module:
		Description:
		Author:			Martin Gäckler
		Company:		CRESD GmbH
		Address:		Arminiusstr. 3a, D-8543 München
		Phone:			+49 - 89 - 65 30 95 63
		Telefax:		+49 - 89 - 65 30 95 64
		Copyright:		Siemens AG
		Date:			xx. xx. 20xx
		History:
*/

#ifndef ACTION_MANAGER_H
#define ACTION_MANAGER_H

// --------------------------------------------------------------------- //
// ----- switches ------------------------------------------------------ //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- includes ------------------------------------------------------ //
// --------------------------------------------------------------------- //

#include <gak/array.h>

#include "ItemManager.h"

// --------------------------------------------------------------------- //
// ----- module switches ----------------------------------------------- //
// --------------------------------------------------------------------- //

#ifdef __BORLANDC__
#	pragma option -RT+
#	ifdef __WIN32__
#		pragma option -a4
#		pragma option -pc
#	else
#		pragma option -po
#		pragma option -a2
#	endif
#endif

// --------------------------------------------------------------------- //
// ----- constants ----------------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- macros -------------------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- type definitions ---------------------------------------------- //
// --------------------------------------------------------------------- //

typedef enum
{
	REFRESH_NONE, REFRESH_REDRAW, REFRESH_RELOAD
} REFRESH_TYPE;

// --------------------------------------------------------------------- //
// ----- class definitions --------------------------------------------- //
// --------------------------------------------------------------------- //

class ACTION_BASE
{
	public:
	ACTION_BASE();

	virtual bool acceptItem( THE_ITEM *theItem );
	virtual bool acceptUser( const UserOrGroup &theUser );

	virtual int getGroup( void ) const = 0;
	virtual const char *getLabel( void ) const = 0;
	virtual REFRESH_TYPE perform( PTR_ITEM theItem ) = 0;
};

typedef ACTION_BASE *ACTION_PTR;

class ACTION_BASE_PROPERTIES : public ACTION_BASE
{
	virtual int getGroup( void ) const;
};

class ACTION_BASE_PERMISSIONS : public ACTION_BASE
{
	virtual int getGroup( void ) const;
};

class ACTION_BASE_CHECK : public ACTION_BASE
{
	virtual int getGroup( void ) const;
};

class ACTION_BASE_MOVE : public ACTION_BASE
{
	virtual int getGroup( void ) const;
};

class ACTION_BASE_VERSIONS : public ACTION_BASE
{
	virtual int getGroup( void ) const;
};

// --------------------------------------------------------------------- //
// ----- module static data -------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- imported datas ------------------------------------------------ //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- exported datas ------------------------------------------------ //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- module static data -------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- class static data --------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- prototypes ---------------------------------------------------- //
// --------------------------------------------------------------------- //

void getItemActions(
	const UserOrGroup &actUser,
	THE_ITEM *theItem,
	Array<ACTION_BASE *> *actions
);

// --------------------------------------------------------------------- //
// ----- module functions ---------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- class inlines ------------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- class constructors/destructors -------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- class static functions ---------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- class privates ------------------------------------------------ //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- class protected ----------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- class virtuals ------------------------------------------------ //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- class publics ------------------------------------------------- //
// --------------------------------------------------------------------- //

// --------------------------------------------------------------------- //
// ----- entry points -------------------------------------------------- //
// --------------------------------------------------------------------- //

#ifdef __BORLANDC__
#	pragma option -RT.
#	pragma option -p.
#	pragma option -a.
#endif

#endif
